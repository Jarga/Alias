import Interfaces = require("../core/Interfaces");
import swo = require("./SeleniumWebObject");
export declare class SeleniumWebElement extends swo.SeleniumWebObject implements Interfaces.ITestableWebElement {
    constructor(_baseObject: webdriver.WebElement, DefaultActionTimeout?: number);
    _baseObject: webdriver.WebElement;
    DefaultActionTimeout: number;
    GetSearchContext(): webdriver.IWebElementFinders;
    GetWeDriver(): webdriver.WebDriver;
    Clear(): webdriver.promise.Promise<void>;
    Type(text: string): webdriver.promise.Promise<void>;
    Type(text: string, element: string): webdriver.promise.Promise<void>;
    Click(): webdriver.promise.Promise<void>;
    Click(element: string): webdriver.promise.Promise<void>;
    Select(item: string, isValue: boolean): webdriver.promise.Promise<void>;
    Select(item: string, isValue: boolean, element: string): webdriver.promise.Promise<void>;
    Exists(targetSubElement: string, timeout: number): webdriver.promise.Promise<boolean>;
    WaitForAppear(timeout: number): webdriver.promise.Promise<boolean>;
    WaitForAppear(timeout: number, targetSubElement: string): webdriver.promise.Promise<boolean>;
    WaitForDisappear(timeout: number): webdriver.promise.Promise<boolean>;
    WaitForDisappear(timeout: number, targetSubElement: string): webdriver.promise.Promise<boolean>;
    IsDisplayed(): webdriver.promise.Promise<boolean>;
    IsSelected(): webdriver.promise.Promise<boolean>;
    SetChecked(value: boolean): webdriver.promise.Promise<void>;
    SetChecked(value: boolean, element: string): webdriver.promise.Promise<void>;
    WaitForAttributeState(attributeName: string, condition: (value: string) => boolean, timeout: number): webdriver.promise.Promise<boolean>;
    WaitForAttributeState(attributeName: string, condition: (value: string) => boolean, timeout: number, targetSubElement: string): webdriver.promise.Promise<boolean>;
    GetCssValue(propertyName: string): webdriver.promise.Promise<string>;
    GetAttribute(attributeName: string): webdriver.promise.Promise<string>;
    GetTagName(): webdriver.promise.Promise<string>;
    InnerHtml(): webdriver.promise.Promise<string>;
    GetText(): webdriver.promise.Promise<string>;
    Parent(levels: number): webdriver.promise.Promise<Interfaces.ITestableWebElement>;
}
